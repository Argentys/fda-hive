Grammar

    0 $accept: input "end of program"

    1 input: non_assignment_expression "end of program"
    2      | statements_with_return "end of program"
    3      | non_return_statements "end of program"
    4      | template "end of program"

    5 statements: statement
    6           | statements statement

    7 non_return_statements: non_return_statement
    8                      | non_return_statements non_return_statement

    9 statements_with_return: return_statement
   10                       | non_return_statements return_statement

   11 statement_block: '{' statements '}'

   12 lambda_block: '{' expression '}'
   13             | '{' statements_with_return '}'
   14             | '{' non_return_statements '}'

   15 namelist: "name"
   16         | namelist ',' "name"

   17 lambda: lambda_block
   18       | "'function'" '(' namelist ')' lambda_block

   19 statement: non_return_statement
   20          | return_statement

   21 non_return_statement: if_statement
   22                     | for_statement
   23                     | while_statement
   24                     | break_statement
   25                     | continue_statement
   26                     | impure_expression ';'

   27 if_statement_start: "'if'" '(' expression ')' statement_block
   28                   | if_statement_start "'else'" "'if'" '(' expression ')' statement_block

   29 if_statement: if_statement_start
   30             | if_statement_start "'else'" statement_block

   31 for_statement: "'for'" '(' optional_arglist ';' optional_arglist ';' optional_arglist ')' statement_block

   32 while_statement: "'while'" '(' expression ')' statement_block

   33 return_statement: "'return'" ';'
   34                 | "'return'" non_assignment_expression ';'

   35 break_statement: "'break'" ';'

   36 continue_statement: "'continue'" ';'

   37 arglist: expression
   38        | arglist ',' expression

   39 optional_arglist: /* empty */
   40                 | arglist

   41 expression: non_assignment_expression
   42           | assignment

   43 assignment_target: variable
   44                  | property_call
   45                  | postfix_expression '[' expression ']'

   46 assignment_source: assignment
   47                  | non_assignment_expression

   48 assignment: assignment_target '=' assignment_source
   49           | assignment_target "'+='" assignment_source
   50           | assignment_target "'-='" assignment_source
   51           | assignment_target "'*='" assignment_source
   52           | assignment_target "'/='" assignment_source
   53           | assignment_target "'%='" assignment_source

   54 basic_expression: literal
   55                 | variable
   56                 | lambda
   57                 | '(' expression ')'
   58                 | dollar_call

   59 impure_expression: postcrement
   60                  | precrement
   61                  | assignment
   62                  | function_call
   63                  | method_call

   64 postfix_expression: basic_expression
   65                   | slice
   66                   | subscript
   67                   | postcrement
   68                   | property_call
   69                   | method_call
   70                   | function_call

   71 slice: postfix_expression '[' expression ':' expression ']'

   72 subscript: postfix_expression '[' expression ']'

   73 postcrement: postfix_expression "'++'"
   74            | postfix_expression "'--'"

   75 function_call: basic_expression '(' optional_arglist ')'

   76 property_call: '.' "name"
   77              | postfix_expression '.' "name"

   78 method_call: '.' basic_expression '(' optional_arglist ')'
   79            | postfix_expression '.' basic_expression '(' optional_arglist ')'

   80 dollar_call: "$NUM"
   81            | "$NAME"

   82 unary_expression: postfix_expression
   83                 | precrement
   84                 | cast
   85                 | '-' unary_expression
   86                 | '+' unary_expression
   87                 | '!' unary_expression

   88 precrement: "'++'" unary_expression
   89           | "'--'" unary_expression

   90 cast: '(' "'bool'" ')' basic_expression
   91     | '(' "'int'" ')' basic_expression
   92     | '(' "'uint'" ')' basic_expression
   93     | '(' "'intlist'" ')' basic_expression
   94     | '(' "'real'" ')' basic_expression
   95     | '(' "'string'" ')' basic_expression
   96     | '(' "'obj'" ')' basic_expression
   97     | '(' "'objlist'" ')' basic_expression
   98     | '(' "'datetime'" ')' basic_expression
   99     | '(' "'date'" ')' basic_expression
  100     | '(' "'time'" ')' basic_expression

  101 multiplication_priority: unary_expression
  102                        | multiplication_priority '*' unary_expression
  103                        | multiplication_priority '/' unary_expression
  104                        | multiplication_priority '%' unary_expression

  105 addition_priority: multiplication_priority
  106                  | addition_priority '+' multiplication_priority
  107                  | addition_priority '-' multiplication_priority

  108 comparable: addition_priority
  109           | unary_expression "'has'" unary_expression
  110           | unary_expression "'has'" junction
  111           | unary_expression "'=~'" "regex literal"
  112           | unary_expression "'!~'" "regex literal"
  113           | addition_priority "'as'" "'bool'"
  114           | addition_priority "'as'" "'int'"
  115           | addition_priority "'as'" "'uint'"
  116           | addition_priority "'as'" "'intlist'"
  117           | addition_priority "'as'" "'real'"
  118           | addition_priority "'as'" "'string'"
  119           | addition_priority "'as'" "'obj'"
  120           | addition_priority "'as'" "'objlist'"
  121           | addition_priority "'as'" "'datetime'"
  122           | addition_priority "'as'" "'date'"
  123           | addition_priority "'as'" "'time'"
  124           | format_call

  125 format_call: addition_priority "'as'" basic_expression '(' optional_arglist ')'

  126 conjunction_priority: equality_priority
  127                     | conjunction_priority "'&&'" equality_priority

  128 disjunction_priority: conjunction_priority
  129                     | disjunction_priority "'||'" conjunction_priority

  130 ternary_priority: disjunction_priority
  131                 | disjunction_priority '?' disjunction_priority ':' ternary_priority

  132 comparison_priority: comparable
  133                    | comparison_priority '<' comparable
  134                    | comparison_priority '>' comparable
  135                    | comparison_priority "'<='" comparable
  136                    | comparison_priority "'>='" comparable
  137                    | comparison_priority "'<=>'" comparable

  138 equality_priority: comparison_priority
  139                  | equality_priority "'=='" comparison_priority
  140                  | equality_priority "'=='" junction
  141                  | equality_priority "'!='" comparison_priority
  142                  | equality_priority "'!='" junction

  143 non_assignment_expression: ternary_priority

  144 junction: unary_expression '|' unary_expression
  145         | junction '|' unary_expression

  146 literal: scalar_literal
  147        | list_literal
  148        | dic_literal

  149 scalar_literal: "int literal"
  150               | "real literal"
  151               | "string literal"
  152               | "null literal"

  153 list_literal: '[' optional_arglist ']'

  154 kv_key: "name"
  155       | "string literal"

  156 kv_pairs: kv_key ':' expression
  157         | kv_pairs ',' kv_key ':' expression

  158 dic_literal: '{' kv_pairs '}'

  159 variable: "name"

  160 template: template_expression
  161         | template template_expression

  162 template_expression: "template literal substring"
  163                    | "$(" expression ')'
  164                    | "$(" statements_with_return ')'


Terminals, with rules where they appear

"end of program" (0) 0 1 2 3 4
'!' (33) 87
'%' (37) 104
'(' (40) 18 27 28 31 32 57 75 78 79 90 91 92 93 94 95 96 97 98 99 100
    125
')' (41) 18 27 28 31 32 57 75 78 79 90 91 92 93 94 95 96 97 98 99 100
    125 163 164
'*' (42) 102
'+' (43) 86 106
',' (44) 16 38 157
'-' (45) 85 107
'.' (46) 76 77 78 79
'/' (47) 103
':' (58) 71 131 156 157
';' (59) 26 31 33 34 35 36
'<' (60) 133
'=' (61) 48
'>' (62) 134
'?' (63) 131
'[' (91) 45 71 72 153
']' (93) 45 71 72 153
'{' (123) 11 12 13 14 158
'|' (124) 144 145
'}' (125) 11 12 13 14 158
error (256)
"int literal" (258) 149
"real literal" (259) 150
"template literal substring" (260) 162
"string literal" (261) 151 155
"regex literal" (262) 111 112
"null literal" (263) 152
"'++'" (264) 73 88
"'+='" (265) 49
"'--'" (266) 74 89
"'-='" (267) 50
"'*='" (268) 51
"'/='" (269) 52
"'%='" (270) 53
"'=='" (271) 139 140
"'!='" (272) 141 142
"'>='" (273) 136
"'<='" (274) 135
"'<=>'" (275) 137
"'=~'" (276) 111
"'!~'" (277) 112
"'&&'" (278) 127
"'||'" (279) 129
"'has'" (280) 109 110
"'if'" (281) 27 28
"'else'" (282) 28 30
"'for'" (283) 31
"'while'" (284) 32
"'break'" (285) 35
"'continue'" (286) 36
"'function'" (287) 18
"'return'" (288) 33 34
"'as'" (289) 113 114 115 116 117 118 119 120 121 122 123 125
"'bool'" (290) 90 113
"'int'" (291) 91 114
"'uint'" (292) 92 115
"'intlist'" (293) 93 116
"'real'" (294) 94 117
"'string'" (295) 95 118
"'obj'" (296) 96 119
"'objlist'" (297) 97 120
"'datetime'" (298) 98 121
"'date'" (299) 99 122
"'time'" (300) 100 123
"name" (301) 15 16 76 77 154 159
"$(" (302) 163 164
"$NUM" (303) 80
"$NAME" (304) 81


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
input (72)
    on left: 1 2 3 4, on right: 0
statements (73)
    on left: 5 6, on right: 6 11
non_return_statements (74)
    on left: 7 8, on right: 3 8 10 14
statements_with_return (75)
    on left: 9 10, on right: 2 13 164
statement_block (76)
    on left: 11, on right: 27 28 30 31 32
lambda_block (77)
    on left: 12 13 14, on right: 17 18
namelist (78)
    on left: 15 16, on right: 16 18
lambda (79)
    on left: 17 18, on right: 56
statement (80)
    on left: 19 20, on right: 5 6
non_return_statement (81)
    on left: 21 22 23 24 25 26, on right: 7 8 19
if_statement_start (82)
    on left: 27 28, on right: 28 29 30
if_statement (83)
    on left: 29 30, on right: 21
for_statement (84)
    on left: 31, on right: 22
while_statement (85)
    on left: 32, on right: 23
return_statement (86)
    on left: 33 34, on right: 9 10 20
break_statement (87)
    on left: 35, on right: 24
continue_statement (88)
    on left: 36, on right: 25
arglist (89)
    on left: 37 38, on right: 38 40
optional_arglist (90)
    on left: 39 40, on right: 31 75 78 79 125 153
expression (91)
    on left: 41 42, on right: 12 27 28 32 37 38 45 57 71 72 156 157
    163
assignment_target (92)
    on left: 43 44 45, on right: 48 49 50 51 52 53
assignment_source (93)
    on left: 46 47, on right: 48 49 50 51 52 53
assignment (94)
    on left: 48 49 50 51 52 53, on right: 42 46 61
basic_expression (95)
    on left: 54 55 56 57 58, on right: 64 75 78 79 90 91 92 93 94 95
    96 97 98 99 100 125
impure_expression (96)
    on left: 59 60 61 62 63, on right: 26
postfix_expression (97)
    on left: 64 65 66 67 68 69 70, on right: 45 71 72 73 74 77 79 82
slice (98)
    on left: 71, on right: 65
subscript (99)
    on left: 72, on right: 66
postcrement (100)
    on left: 73 74, on right: 59 67
function_call (101)
    on left: 75, on right: 62 70
property_call (102)
    on left: 76 77, on right: 44 68
method_call (103)
    on left: 78 79, on right: 63 69
dollar_call (104)
    on left: 80 81, on right: 58
unary_expression (105)
    on left: 82 83 84 85 86 87, on right: 85 86 87 88 89 101 102 103
    104 109 110 111 112 144 145
precrement (106)
    on left: 88 89, on right: 60 83
cast (107)
    on left: 90 91 92 93 94 95 96 97 98 99 100, on right: 84
multiplication_priority (108)
    on left: 101 102 103 104, on right: 102 103 104 105 106 107
addition_priority (109)
    on left: 105 106 107, on right: 106 107 108 113 114 115 116 117
    118 119 120 121 122 123 125
comparable (110)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121
    122 123 124, on right: 132 133 134 135 136 137
format_call (111)
    on left: 125, on right: 124
conjunction_priority (112)
    on left: 126 127, on right: 127 128 129
disjunction_priority (113)
    on left: 128 129, on right: 129 130 131
ternary_priority (114)
    on left: 130 131, on right: 131 143
comparison_priority (115)
    on left: 132 133 134 135 136 137, on right: 133 134 135 136 137
    138 139 141
equality_priority (116)
    on left: 138 139 140 141 142, on right: 126 127 139 140 141 142
non_assignment_expression (117)
    on left: 143, on right: 1 34 41 47
junction (118)
    on left: 144 145, on right: 110 140 142 145
literal (119)
    on left: 146 147 148, on right: 54
scalar_literal (120)
    on left: 149 150 151 152, on right: 146
list_literal (121)
    on left: 153, on right: 147
kv_key (122)
    on left: 154 155, on right: 156 157
kv_pairs (123)
    on left: 156 157, on right: 157 158
dic_literal (124)
    on left: 158, on right: 148
variable (125)
    on left: 159, on right: 43 55
template (126)
    on left: 160 161, on right: 4 161
template_expression (127)
    on left: 162 163 164, on right: 160 161


State 0

    0 $accept: . input "end of program"

    '('                           shift, and go to state 1
    '['                           shift, and go to state 2
    '{'                           shift, and go to state 3
    '.'                           shift, and go to state 4
    "int literal"                 shift, and go to state 5
    "real literal"                shift, and go to state 6
    "template literal substring"  shift, and go to state 7
    "string literal"              shift, and go to state 8
    "null literal"                shift, and go to state 9
    '+'                           shift, and go to state 10
    "'++'"                        shift, and go to state 11
    '-'                           shift, and go to state 12
    "'--'"                        shift, and go to state 13
    '!'                           shift, and go to state 14
    "'if'"                        shift, and go to state 15
    "'for'"                       shift, and go to state 16
    "'while'"                     shift, and go to state 17
    "'break'"                     shift, and go to state 18
    "'continue'"                  shift, and go to state 19
    "'function'"                  shift, and go to state 20
    "'return'"                    shift, and go to state 21
    "name"                        shift, and go to state 22
    "$("                          shift, and go to state 23
    "$NUM"                        shift, and go to state 24
    "$NAME"                       shift, and go to state 25

    input                      go to state 26
    non_return_statements      go to state 27
    statements_with_return     go to state 28
    lambda_block               go to state 29
    lambda                     go to state 30
    non_return_statement       go to state 31
    if_statement_start         go to state 32
    if_statement               go to state 33
    for_statement              go to state 34
    while_statement            go to state 35
    return_statement           go to state 36
    break_statement            go to state 37
    continue_statement         go to state 38
    assignment_target          go to state 39
    assignment                 go to state 40
    basic_expression           go to state 41
    impure_expression          go to state 42
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 46
    function_call              go to state 47
    property_call              go to state 48
    method_call                go to state 49
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 52
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 63
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68
    template                   go to state 69
    template_expression        go to state 70


State 1

   57 basic_expression: '(' . expression ')'
   90 cast: '(' . "'bool'" ')' basic_expression
   91     | '(' . "'int'" ')' basic_expression
   92     | '(' . "'uint'" ')' basic_expression
   93     | '(' . "'intlist'" ')' basic_expression
   94     | '(' . "'real'" ')' basic_expression
   95     | '(' . "'string'" ')' basic_expression
   96     | '(' . "'obj'" ')' basic_expression
   97     | '(' . "'objlist'" ')' basic_expression
   98     | '(' . "'datetime'" ')' basic_expression
   99     | '(' . "'date'" ')' basic_expression
  100     | '(' . "'time'" ')' basic_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "'bool'"          shift, and go to state 71
    "'int'"           shift, and go to state 72
    "'uint'"          shift, and go to state 73
    "'intlist'"       shift, and go to state 74
    "'real'"          shift, and go to state 75
    "'string'"        shift, and go to state 76
    "'obj'"           shift, and go to state 77
    "'objlist'"       shift, and go to state 78
    "'datetime'"      shift, and go to state 79
    "'date'"          shift, and go to state 80
    "'time'"          shift, and go to state 81
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 82
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 2

  153 list_literal: '[' . optional_arglist ']'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 90
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 3

   12 lambda_block: '{' . expression '}'
   13             | '{' . statements_with_return '}'
   14             | '{' . non_return_statements '}'
  158 dic_literal: '{' . kv_pairs '}'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 92
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 93
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    non_return_statements      go to state 94
    statements_with_return     go to state 95
    lambda_block               go to state 29
    lambda                     go to state 30
    non_return_statement       go to state 31
    if_statement_start         go to state 32
    if_statement               go to state 33
    for_statement              go to state 34
    while_statement            go to state 35
    return_statement           go to state 36
    break_statement            go to state 37
    continue_statement         go to state 38
    expression                 go to state 96
    assignment_target          go to state 39
    assignment                 go to state 97
    basic_expression           go to state 41
    impure_expression          go to state 42
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 46
    function_call              go to state 47
    property_call              go to state 48
    method_call                go to state 49
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 52
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    kv_key                     go to state 98
    kv_pairs                   go to state 99
    dic_literal                go to state 67
    variable                   go to state 68


State 4

   76 property_call: '.' . "name"
   78 method_call: '.' . basic_expression '(' optional_arglist ')'

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 101
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 102
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 5

  149 scalar_literal: "int literal" .

    $default  reduce using rule 149 (scalar_literal)


State 6

  150 scalar_literal: "real literal" .

    $default  reduce using rule 150 (scalar_literal)


State 7

  162 template_expression: "template literal substring" .

    $default  reduce using rule 162 (template_expression)


State 8

  151 scalar_literal: "string literal" .

    $default  reduce using rule 151 (scalar_literal)


State 9

  152 scalar_literal: "null literal" .

    $default  reduce using rule 152 (scalar_literal)


State 10

   86 unary_expression: '+' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 106
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 11

   88 precrement: "'++'" . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 107
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 12

   85 unary_expression: '-' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 108
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 13

   89 precrement: "'--'" . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 109
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 14

   87 unary_expression: '!' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 110
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 15

   27 if_statement_start: "'if'" . '(' expression ')' statement_block

    '('  shift, and go to state 111


State 16

   31 for_statement: "'for'" . '(' optional_arglist ';' optional_arglist ';' optional_arglist ')' statement_block

    '('  shift, and go to state 112


State 17

   32 while_statement: "'while'" . '(' expression ')' statement_block

    '('  shift, and go to state 113


State 18

   35 break_statement: "'break'" . ';'

    ';'  shift, and go to state 114


State 19

   36 continue_statement: "'continue'" . ';'

    ';'  shift, and go to state 115


State 20

   18 lambda: "'function'" . '(' namelist ')' lambda_block

    '('  shift, and go to state 116


State 21

   33 return_statement: "'return'" . ';'
   34                 | "'return'" . non_assignment_expression ';'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    ';'               shift, and go to state 117
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    basic_expression           go to state 41
    postfix_expression         go to state 104
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 105
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 118
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 103


State 22

  159 variable: "name" .

    $default  reduce using rule 159 (variable)


State 23

  163 template_expression: "$(" . expression ')'
  164                    | "$(" . statements_with_return ')'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    non_return_statements      go to state 119
    statements_with_return     go to state 120
    lambda_block               go to state 29
    lambda                     go to state 30
    non_return_statement       go to state 31
    if_statement_start         go to state 32
    if_statement               go to state 33
    for_statement              go to state 34
    while_statement            go to state 35
    return_statement           go to state 36
    break_statement            go to state 37
    continue_statement         go to state 38
    expression                 go to state 121
    assignment_target          go to state 39
    assignment                 go to state 97
    basic_expression           go to state 41
    impure_expression          go to state 42
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 46
    function_call              go to state 47
    property_call              go to state 48
    method_call                go to state 49
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 52
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 24

   80 dollar_call: "$NUM" .

    $default  reduce using rule 80 (dollar_call)


State 25

   81 dollar_call: "$NAME" .

    $default  reduce using rule 81 (dollar_call)


State 26

    0 $accept: input . "end of program"

    "end of program"  shift, and go to state 122


State 27

    3 input: non_return_statements . "end of program"
    8 non_return_statements: non_return_statements . non_return_statement
   10 statements_with_return: non_return_statements . return_statement

    "end of program"  shift, and go to state 123
    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'++'"            shift, and go to state 11
    "'--'"            shift, and go to state 13
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block          go to state 29
    lambda                go to state 30
    non_return_statement  go to state 124
    if_statement_start    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34
    while_statement       go to state 35
    return_statement      go to state 125
    break_statement       go to state 37
    continue_statement    go to state 38
    assignment_target     go to state 39
    assignment            go to state 40
    basic_expression      go to state 41
    impure_expression     go to state 42
    postfix_expression    go to state 126
    slice                 go to state 44
    subscript             go to state 45
    postcrement           go to state 46
    function_call         go to state 47
    property_call         go to state 48
    method_call           go to state 49
    dollar_call           go to state 50
    precrement            go to state 127
    literal               go to state 64
    scalar_literal        go to state 65
    list_literal          go to state 66
    dic_literal           go to state 67
    variable              go to state 68


State 28

    2 input: statements_with_return . "end of program"

    "end of program"  shift, and go to state 128


State 29

   17 lambda: lambda_block .

    $default  reduce using rule 17 (lambda)


State 30

   56 basic_expression: lambda .

    $default  reduce using rule 56 (basic_expression)


State 31

    7 non_return_statements: non_return_statement .

    $default  reduce using rule 7 (non_return_statements)


State 32

   28 if_statement_start: if_statement_start . "'else'" "'if'" '(' expression ')' statement_block
   29 if_statement: if_statement_start .
   30             | if_statement_start . "'else'" statement_block

    "'else'"  shift, and go to state 129

    $default  reduce using rule 29 (if_statement)


State 33

   21 non_return_statement: if_statement .

    $default  reduce using rule 21 (non_return_statement)


State 34

   22 non_return_statement: for_statement .

    $default  reduce using rule 22 (non_return_statement)


State 35

   23 non_return_statement: while_statement .

    $default  reduce using rule 23 (non_return_statement)


State 36

    9 statements_with_return: return_statement .

    $default  reduce using rule 9 (statements_with_return)


State 37

   24 non_return_statement: break_statement .

    $default  reduce using rule 24 (non_return_statement)


State 38

   25 non_return_statement: continue_statement .

    $default  reduce using rule 25 (non_return_statement)


State 39

   48 assignment: assignment_target . '=' assignment_source
   49           | assignment_target . "'+='" assignment_source
   50           | assignment_target . "'-='" assignment_source
   51           | assignment_target . "'*='" assignment_source
   52           | assignment_target . "'/='" assignment_source
   53           | assignment_target . "'%='" assignment_source

    '='     shift, and go to state 130
    "'+='"  shift, and go to state 131
    "'-='"  shift, and go to state 132
    "'*='"  shift, and go to state 133
    "'/='"  shift, and go to state 134
    "'%='"  shift, and go to state 135


State 40

   61 impure_expression: assignment .

    $default  reduce using rule 61 (impure_expression)


State 41

   64 postfix_expression: basic_expression .
   75 function_call: basic_expression . '(' optional_arglist ')'

    '('  shift, and go to state 136

    $default  reduce using rule 64 (postfix_expression)


State 42

   26 non_return_statement: impure_expression . ';'

    ';'  shift, and go to state 137


State 43

   45 assignment_target: postfix_expression . '[' expression ']'
   71 slice: postfix_expression . '[' expression ':' expression ']'
   72 subscript: postfix_expression . '[' expression ']'
   73 postcrement: postfix_expression . "'++'"
   74            | postfix_expression . "'--'"
   77 property_call: postfix_expression . '.' "name"
   79 method_call: postfix_expression . '.' basic_expression '(' optional_arglist ')'
   82 unary_expression: postfix_expression .

    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    "'++'"  shift, and go to state 140
    "'--'"  shift, and go to state 141

    $default  reduce using rule 82 (unary_expression)


State 44

   65 postfix_expression: slice .

    $default  reduce using rule 65 (postfix_expression)


State 45

   66 postfix_expression: subscript .

    $default  reduce using rule 66 (postfix_expression)


State 46

   59 impure_expression: postcrement .
   67 postfix_expression: postcrement .

    ';'       reduce using rule 59 (impure_expression)
    $default  reduce using rule 67 (postfix_expression)


State 47

   62 impure_expression: function_call .
   70 postfix_expression: function_call .

    ';'       reduce using rule 62 (impure_expression)
    $default  reduce using rule 70 (postfix_expression)


State 48

   44 assignment_target: property_call .
   68 postfix_expression: property_call .

    '='       reduce using rule 44 (assignment_target)
    "'+='"    reduce using rule 44 (assignment_target)
    "'-='"    reduce using rule 44 (assignment_target)
    "'*='"    reduce using rule 44 (assignment_target)
    "'/='"    reduce using rule 44 (assignment_target)
    "'%='"    reduce using rule 44 (assignment_target)
    $default  reduce using rule 68 (postfix_expression)


State 49

   63 impure_expression: method_call .
   69 postfix_expression: method_call .

    ';'       reduce using rule 63 (impure_expression)
    $default  reduce using rule 69 (postfix_expression)


State 50

   58 basic_expression: dollar_call .

    $default  reduce using rule 58 (basic_expression)


State 51

  101 multiplication_priority: unary_expression .
  109 comparable: unary_expression . "'has'" unary_expression
  110           | unary_expression . "'has'" junction
  111           | unary_expression . "'=~'" "regex literal"
  112           | unary_expression . "'!~'" "regex literal"

    "'=~'"   shift, and go to state 142
    "'!~'"   shift, and go to state 143
    "'has'"  shift, and go to state 144

    $default  reduce using rule 101 (multiplication_priority)


State 52

   60 impure_expression: precrement .
   83 unary_expression: precrement .

    ';'       reduce using rule 60 (impure_expression)
    $default  reduce using rule 83 (unary_expression)


State 53

   84 unary_expression: cast .

    $default  reduce using rule 84 (unary_expression)


State 54

  102 multiplication_priority: multiplication_priority . '*' unary_expression
  103                        | multiplication_priority . '/' unary_expression
  104                        | multiplication_priority . '%' unary_expression
  105 addition_priority: multiplication_priority .

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146
    '%'  shift, and go to state 147

    $default  reduce using rule 105 (addition_priority)


State 55

  106 addition_priority: addition_priority . '+' multiplication_priority
  107                  | addition_priority . '-' multiplication_priority
  108 comparable: addition_priority .
  113           | addition_priority . "'as'" "'bool'"
  114           | addition_priority . "'as'" "'int'"
  115           | addition_priority . "'as'" "'uint'"
  116           | addition_priority . "'as'" "'intlist'"
  117           | addition_priority . "'as'" "'real'"
  118           | addition_priority . "'as'" "'string'"
  119           | addition_priority . "'as'" "'obj'"
  120           | addition_priority . "'as'" "'objlist'"
  121           | addition_priority . "'as'" "'datetime'"
  122           | addition_priority . "'as'" "'date'"
  123           | addition_priority . "'as'" "'time'"
  125 format_call: addition_priority . "'as'" basic_expression '(' optional_arglist ')'

    '+'     shift, and go to state 148
    '-'     shift, and go to state 149
    "'as'"  shift, and go to state 150

    $default  reduce using rule 108 (comparable)


State 56

  132 comparison_priority: comparable .

    $default  reduce using rule 132 (comparison_priority)


State 57

  124 comparable: format_call .

    $default  reduce using rule 124 (comparable)


State 58

  127 conjunction_priority: conjunction_priority . "'&&'" equality_priority
  128 disjunction_priority: conjunction_priority .

    "'&&'"  shift, and go to state 151

    $default  reduce using rule 128 (disjunction_priority)


State 59

  129 disjunction_priority: disjunction_priority . "'||'" conjunction_priority
  130 ternary_priority: disjunction_priority .
  131                 | disjunction_priority . '?' disjunction_priority ':' ternary_priority

    '?'     shift, and go to state 152
    "'||'"  shift, and go to state 153

    $default  reduce using rule 130 (ternary_priority)


State 60

  143 non_assignment_expression: ternary_priority .

    $default  reduce using rule 143 (non_assignment_expression)


State 61

  133 comparison_priority: comparison_priority . '<' comparable
  134                    | comparison_priority . '>' comparable
  135                    | comparison_priority . "'<='" comparable
  136                    | comparison_priority . "'>='" comparable
  137                    | comparison_priority . "'<=>'" comparable
  138 equality_priority: comparison_priority .

    '>'      shift, and go to state 154
    '<'      shift, and go to state 155
    "'>='"   shift, and go to state 156
    "'<='"   shift, and go to state 157
    "'<=>'"  shift, and go to state 158

    $default  reduce using rule 138 (equality_priority)


State 62

  126 conjunction_priority: equality_priority .
  139 equality_priority: equality_priority . "'=='" comparison_priority
  140                  | equality_priority . "'=='" junction
  141                  | equality_priority . "'!='" comparison_priority
  142                  | equality_priority . "'!='" junction

    "'=='"  shift, and go to state 159
    "'!='"  shift, and go to state 160

    $default  reduce using rule 126 (conjunction_priority)


State 63

    1 input: non_assignment_expression . "end of program"

    "end of program"  shift, and go to state 161


State 64

   54 basic_expression: literal .

    $default  reduce using rule 54 (basic_expression)


State 65

  146 literal: scalar_literal .

    $default  reduce using rule 146 (literal)


State 66

  147 literal: list_literal .

    $default  reduce using rule 147 (literal)


State 67

  148 literal: dic_literal .

    $default  reduce using rule 148 (literal)


State 68

   43 assignment_target: variable .
   55 basic_expression: variable .

    '='       reduce using rule 43 (assignment_target)
    "'+='"    reduce using rule 43 (assignment_target)
    "'-='"    reduce using rule 43 (assignment_target)
    "'*='"    reduce using rule 43 (assignment_target)
    "'/='"    reduce using rule 43 (assignment_target)
    "'%='"    reduce using rule 43 (assignment_target)
    $default  reduce using rule 55 (basic_expression)


State 69

    4 input: template . "end of program"
  161 template: template . template_expression

    "end of program"              shift, and go to state 162
    "template literal substring"  shift, and go to state 7
    "$("                          shift, and go to state 23

    template_expression  go to state 163


State 70

  160 template: template_expression .

    $default  reduce using rule 160 (template)


State 71

   90 cast: '(' "'bool'" . ')' basic_expression

    ')'  shift, and go to state 164


State 72

   91 cast: '(' "'int'" . ')' basic_expression

    ')'  shift, and go to state 165


State 73

   92 cast: '(' "'uint'" . ')' basic_expression

    ')'  shift, and go to state 166


State 74

   93 cast: '(' "'intlist'" . ')' basic_expression

    ')'  shift, and go to state 167


State 75

   94 cast: '(' "'real'" . ')' basic_expression

    ')'  shift, and go to state 168


State 76

   95 cast: '(' "'string'" . ')' basic_expression

    ')'  shift, and go to state 169


State 77

   96 cast: '(' "'obj'" . ')' basic_expression

    ')'  shift, and go to state 170


State 78

   97 cast: '(' "'objlist'" . ')' basic_expression

    ')'  shift, and go to state 171


State 79

   98 cast: '(' "'datetime'" . ')' basic_expression

    ')'  shift, and go to state 172


State 80

   99 cast: '(' "'date'" . ')' basic_expression

    ')'  shift, and go to state 173


State 81

  100 cast: '(' "'time'" . ')' basic_expression

    ')'  shift, and go to state 174


State 82

   57 basic_expression: '(' expression . ')'

    ')'  shift, and go to state 175


State 83

   42 expression: assignment .

    $default  reduce using rule 42 (expression)


State 84

   67 postfix_expression: postcrement .

    $default  reduce using rule 67 (postfix_expression)


State 85

   70 postfix_expression: function_call .

    $default  reduce using rule 70 (postfix_expression)


State 86

   69 postfix_expression: method_call .

    $default  reduce using rule 69 (postfix_expression)


State 87

   83 unary_expression: precrement .

    $default  reduce using rule 83 (unary_expression)


State 88

   41 expression: non_assignment_expression .

    $default  reduce using rule 41 (expression)


State 89

   38 arglist: arglist . ',' expression
   40 optional_arglist: arglist .

    ','  shift, and go to state 176

    $default  reduce using rule 40 (optional_arglist)


State 90

  153 list_literal: '[' optional_arglist . ']'

    ']'  shift, and go to state 177


State 91

   37 arglist: expression .

    $default  reduce using rule 37 (arglist)


State 92

  151 scalar_literal: "string literal" .
  155 kv_key: "string literal" .

    ':'       reduce using rule 155 (kv_key)
    $default  reduce using rule 151 (scalar_literal)


State 93

  154 kv_key: "name" .
  159 variable: "name" .

    ':'       reduce using rule 154 (kv_key)
    $default  reduce using rule 159 (variable)


State 94

    8 non_return_statements: non_return_statements . non_return_statement
   10 statements_with_return: non_return_statements . return_statement
   14 lambda_block: '{' non_return_statements . '}'

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '}'               shift, and go to state 178
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'++'"            shift, and go to state 11
    "'--'"            shift, and go to state 13
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block          go to state 29
    lambda                go to state 30
    non_return_statement  go to state 124
    if_statement_start    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34
    while_statement       go to state 35
    return_statement      go to state 125
    break_statement       go to state 37
    continue_statement    go to state 38
    assignment_target     go to state 39
    assignment            go to state 40
    basic_expression      go to state 41
    impure_expression     go to state 42
    postfix_expression    go to state 126
    slice                 go to state 44
    subscript             go to state 45
    postcrement           go to state 46
    function_call         go to state 47
    property_call         go to state 48
    method_call           go to state 49
    dollar_call           go to state 50
    precrement            go to state 127
    literal               go to state 64
    scalar_literal        go to state 65
    list_literal          go to state 66
    dic_literal           go to state 67
    variable              go to state 68


State 95

   13 lambda_block: '{' statements_with_return . '}'

    '}'  shift, and go to state 179


State 96

   12 lambda_block: '{' expression . '}'

    '}'  shift, and go to state 180


State 97

   42 expression: assignment .
   61 impure_expression: assignment .

    ';'       reduce using rule 61 (impure_expression)
    $default  reduce using rule 42 (expression)


State 98

  156 kv_pairs: kv_key . ':' expression

    ':'  shift, and go to state 181


State 99

  157 kv_pairs: kv_pairs . ',' kv_key ':' expression
  158 dic_literal: '{' kv_pairs . '}'

    '}'  shift, and go to state 182
    ','  shift, and go to state 183


State 100

   57 basic_expression: '(' . expression ')'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 82
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 101

   76 property_call: '.' "name" .
  159 variable: "name" .

    '('       reduce using rule 159 (variable)
    $default  reduce using rule 76 (property_call)


State 102

   78 method_call: '.' basic_expression . '(' optional_arglist ')'

    '('  shift, and go to state 184


State 103

   55 basic_expression: variable .

    $default  reduce using rule 55 (basic_expression)


State 104

   71 slice: postfix_expression . '[' expression ':' expression ']'
   72 subscript: postfix_expression . '[' expression ']'
   73 postcrement: postfix_expression . "'++'"
   74            | postfix_expression . "'--'"
   77 property_call: postfix_expression . '.' "name"
   79 method_call: postfix_expression . '.' basic_expression '(' optional_arglist ')'
   82 unary_expression: postfix_expression .

    '['     shift, and go to state 185
    '.'     shift, and go to state 139
    "'++'"  shift, and go to state 140
    "'--'"  shift, and go to state 141

    $default  reduce using rule 82 (unary_expression)


State 105

   68 postfix_expression: property_call .

    $default  reduce using rule 68 (postfix_expression)


State 106

   86 unary_expression: '+' unary_expression .

    $default  reduce using rule 86 (unary_expression)


State 107

   88 precrement: "'++'" unary_expression .

    $default  reduce using rule 88 (precrement)


State 108

   85 unary_expression: '-' unary_expression .

    $default  reduce using rule 85 (unary_expression)


State 109

   89 precrement: "'--'" unary_expression .

    $default  reduce using rule 89 (precrement)


State 110

   87 unary_expression: '!' unary_expression .

    $default  reduce using rule 87 (unary_expression)


State 111

   27 if_statement_start: "'if'" '(' . expression ')' statement_block

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 186
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 112

   31 for_statement: "'for'" '(' . optional_arglist ';' optional_arglist ';' optional_arglist ')' statement_block

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 187
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 113

   32 while_statement: "'while'" '(' . expression ')' statement_block

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 188
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 114

   35 break_statement: "'break'" ';' .

    $default  reduce using rule 35 (break_statement)


State 115

   36 continue_statement: "'continue'" ';' .

    $default  reduce using rule 36 (continue_statement)


State 116

   18 lambda: "'function'" '(' . namelist ')' lambda_block

    "name"  shift, and go to state 189

    namelist  go to state 190


State 117

   33 return_statement: "'return'" ';' .

    $default  reduce using rule 33 (return_statement)


State 118

   34 return_statement: "'return'" non_assignment_expression . ';'

    ';'  shift, and go to state 191


State 119

    8 non_return_statements: non_return_statements . non_return_statement
   10 statements_with_return: non_return_statements . return_statement

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'++'"            shift, and go to state 11
    "'--'"            shift, and go to state 13
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block          go to state 29
    lambda                go to state 30
    non_return_statement  go to state 124
    if_statement_start    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34
    while_statement       go to state 35
    return_statement      go to state 125
    break_statement       go to state 37
    continue_statement    go to state 38
    assignment_target     go to state 39
    assignment            go to state 40
    basic_expression      go to state 41
    impure_expression     go to state 42
    postfix_expression    go to state 126
    slice                 go to state 44
    subscript             go to state 45
    postcrement           go to state 46
    function_call         go to state 47
    property_call         go to state 48
    method_call           go to state 49
    dollar_call           go to state 50
    precrement            go to state 127
    literal               go to state 64
    scalar_literal        go to state 65
    list_literal          go to state 66
    dic_literal           go to state 67
    variable              go to state 68


State 120

  164 template_expression: "$(" statements_with_return . ')'

    ')'  shift, and go to state 192


State 121

  163 template_expression: "$(" expression . ')'

    ')'  shift, and go to state 193


State 122

    0 $accept: input "end of program" .

    $default  accept


State 123

    3 input: non_return_statements "end of program" .

    $default  reduce using rule 3 (input)


State 124

    8 non_return_statements: non_return_statements non_return_statement .

    $default  reduce using rule 8 (non_return_statements)


State 125

   10 statements_with_return: non_return_statements return_statement .

    $default  reduce using rule 10 (statements_with_return)


State 126

   45 assignment_target: postfix_expression . '[' expression ']'
   71 slice: postfix_expression . '[' expression ':' expression ']'
   72 subscript: postfix_expression . '[' expression ']'
   73 postcrement: postfix_expression . "'++'"
   74            | postfix_expression . "'--'"
   77 property_call: postfix_expression . '.' "name"
   79 method_call: postfix_expression . '.' basic_expression '(' optional_arglist ')'

    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    "'++'"  shift, and go to state 140
    "'--'"  shift, and go to state 141


State 127

   60 impure_expression: precrement .

    $default  reduce using rule 60 (impure_expression)


State 128

    2 input: statements_with_return "end of program" .

    $default  reduce using rule 2 (input)


State 129

   28 if_statement_start: if_statement_start "'else'" . "'if'" '(' expression ')' statement_block
   30 if_statement: if_statement_start "'else'" . statement_block

    '{'     shift, and go to state 194
    "'if'"  shift, and go to state 195

    statement_block  go to state 196


State 130

   48 assignment: assignment_target '=' . assignment_source

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    assignment_target          go to state 39
    assignment_source          go to state 197
    assignment                 go to state 198
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 199
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 131

   49 assignment: assignment_target "'+='" . assignment_source

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    assignment_target          go to state 39
    assignment_source          go to state 200
    assignment                 go to state 198
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 199
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 132

   50 assignment: assignment_target "'-='" . assignment_source

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    assignment_target          go to state 39
    assignment_source          go to state 201
    assignment                 go to state 198
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 199
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 133

   51 assignment: assignment_target "'*='" . assignment_source

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    assignment_target          go to state 39
    assignment_source          go to state 202
    assignment                 go to state 198
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 199
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 134

   52 assignment: assignment_target "'/='" . assignment_source

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    assignment_target          go to state 39
    assignment_source          go to state 203
    assignment                 go to state 198
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 199
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 135

   53 assignment: assignment_target "'%='" . assignment_source

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    assignment_target          go to state 39
    assignment_source          go to state 204
    assignment                 go to state 198
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 199
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 136

   75 function_call: basic_expression '(' . optional_arglist ')'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 205
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 137

   26 non_return_statement: impure_expression ';' .

    $default  reduce using rule 26 (non_return_statement)


State 138

   45 assignment_target: postfix_expression '[' . expression ']'
   71 slice: postfix_expression '[' . expression ':' expression ']'
   72 subscript: postfix_expression '[' . expression ']'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 206
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 139

   77 property_call: postfix_expression '.' . "name"
   79 method_call: postfix_expression '.' . basic_expression '(' optional_arglist ')'

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 207
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 208
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 140

   73 postcrement: postfix_expression "'++'" .

    $default  reduce using rule 73 (postcrement)


State 141

   74 postcrement: postfix_expression "'--'" .

    $default  reduce using rule 74 (postcrement)


State 142

  111 comparable: unary_expression "'=~'" . "regex literal"

    "regex literal"  shift, and go to state 209


State 143

  112 comparable: unary_expression "'!~'" . "regex literal"

    "regex literal"  shift, and go to state 210


State 144

  109 comparable: unary_expression "'has'" . unary_expression
  110           | unary_expression "'has'" . junction

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 211
    precrement          go to state 87
    cast                go to state 53
    junction            go to state 212
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 145

  102 multiplication_priority: multiplication_priority '*' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 213
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 146

  103 multiplication_priority: multiplication_priority '/' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 214
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 147

  104 multiplication_priority: multiplication_priority '%' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 215
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 148

  106 addition_priority: addition_priority '+' . multiplication_priority

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 216
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 217
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 149

  107 addition_priority: addition_priority '-' . multiplication_priority

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 216
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 218
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 150

  113 comparable: addition_priority "'as'" . "'bool'"
  114           | addition_priority "'as'" . "'int'"
  115           | addition_priority "'as'" . "'uint'"
  116           | addition_priority "'as'" . "'intlist'"
  117           | addition_priority "'as'" . "'real'"
  118           | addition_priority "'as'" . "'string'"
  119           | addition_priority "'as'" . "'obj'"
  120           | addition_priority "'as'" . "'objlist'"
  121           | addition_priority "'as'" . "'datetime'"
  122           | addition_priority "'as'" . "'date'"
  123           | addition_priority "'as'" . "'time'"
  125 format_call: addition_priority "'as'" . basic_expression '(' optional_arglist ')'

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "'bool'"          shift, and go to state 219
    "'int'"           shift, and go to state 220
    "'uint'"          shift, and go to state 221
    "'intlist'"       shift, and go to state 222
    "'real'"          shift, and go to state 223
    "'string'"        shift, and go to state 224
    "'obj'"           shift, and go to state 225
    "'objlist'"       shift, and go to state 226
    "'datetime'"      shift, and go to state 227
    "'date'"          shift, and go to state 228
    "'time'"          shift, and go to state 229
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 230
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 151

  127 conjunction_priority: conjunction_priority "'&&'" . equality_priority

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 56
    format_call              go to state 57
    comparison_priority      go to state 61
    equality_priority        go to state 231
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 152

  131 ternary_priority: disjunction_priority '?' . disjunction_priority ':' ternary_priority

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 56
    format_call              go to state 57
    conjunction_priority     go to state 58
    disjunction_priority     go to state 232
    comparison_priority      go to state 61
    equality_priority        go to state 62
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 153

  129 disjunction_priority: disjunction_priority "'||'" . conjunction_priority

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 56
    format_call              go to state 57
    conjunction_priority     go to state 233
    comparison_priority      go to state 61
    equality_priority        go to state 62
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 154

  134 comparison_priority: comparison_priority '>' . comparable

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 234
    format_call              go to state 57
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 155

  133 comparison_priority: comparison_priority '<' . comparable

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 235
    format_call              go to state 57
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 156

  136 comparison_priority: comparison_priority "'>='" . comparable

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 236
    format_call              go to state 57
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 157

  135 comparison_priority: comparison_priority "'<='" . comparable

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 237
    format_call              go to state 57
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 158

  137 comparison_priority: comparison_priority "'<=>'" . comparable

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 238
    format_call              go to state 57
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 159

  139 equality_priority: equality_priority "'=='" . comparison_priority
  140                  | equality_priority "'=='" . junction

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 239
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 56
    format_call              go to state 57
    comparison_priority      go to state 240
    junction                 go to state 241
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 160

  141 equality_priority: equality_priority "'!='" . comparison_priority
  142                  | equality_priority "'!='" . junction

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 239
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 56
    format_call              go to state 57
    comparison_priority      go to state 242
    junction                 go to state 243
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 161

    1 input: non_assignment_expression "end of program" .

    $default  reduce using rule 1 (input)


State 162

    4 input: template "end of program" .

    $default  reduce using rule 4 (input)


State 163

  161 template: template template_expression .

    $default  reduce using rule 161 (template)


State 164

   90 cast: '(' "'bool'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 244
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 165

   91 cast: '(' "'int'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 245
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 166

   92 cast: '(' "'uint'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 246
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 167

   93 cast: '(' "'intlist'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 247
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 168

   94 cast: '(' "'real'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 248
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 169

   95 cast: '(' "'string'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 249
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 170

   96 cast: '(' "'obj'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 250
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 171

   97 cast: '(' "'objlist'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 251
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 172

   98 cast: '(' "'datetime'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 252
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 173

   99 cast: '(' "'date'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 253
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 174

  100 cast: '(' "'time'" ')' . basic_expression

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block      go to state 29
    lambda            go to state 30
    basic_expression  go to state 254
    dollar_call       go to state 50
    literal           go to state 64
    scalar_literal    go to state 65
    list_literal      go to state 66
    dic_literal       go to state 67
    variable          go to state 103


State 175

   57 basic_expression: '(' expression ')' .

    $default  reduce using rule 57 (basic_expression)


State 176

   38 arglist: arglist ',' . expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 255
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 177

  153 list_literal: '[' optional_arglist ']' .

    $default  reduce using rule 153 (list_literal)


State 178

   14 lambda_block: '{' non_return_statements '}' .

    $default  reduce using rule 14 (lambda_block)


State 179

   13 lambda_block: '{' statements_with_return '}' .

    $default  reduce using rule 13 (lambda_block)


State 180

   12 lambda_block: '{' expression '}' .

    $default  reduce using rule 12 (lambda_block)


State 181

  156 kv_pairs: kv_key ':' . expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 256
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 182

  158 dic_literal: '{' kv_pairs '}' .

    $default  reduce using rule 158 (dic_literal)


State 183

  157 kv_pairs: kv_pairs ',' . kv_key ':' expression

    "string literal"  shift, and go to state 257
    "name"            shift, and go to state 258

    kv_key  go to state 259


State 184

   78 method_call: '.' basic_expression '(' . optional_arglist ')'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 260
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 185

   71 slice: postfix_expression '[' . expression ':' expression ']'
   72 subscript: postfix_expression '[' . expression ']'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 261
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 186

   27 if_statement_start: "'if'" '(' expression . ')' statement_block

    ')'  shift, and go to state 262


State 187

   31 for_statement: "'for'" '(' optional_arglist . ';' optional_arglist ';' optional_arglist ')' statement_block

    ';'  shift, and go to state 263


State 188

   32 while_statement: "'while'" '(' expression . ')' statement_block

    ')'  shift, and go to state 264


State 189

   15 namelist: "name" .

    $default  reduce using rule 15 (namelist)


State 190

   16 namelist: namelist . ',' "name"
   18 lambda: "'function'" '(' namelist . ')' lambda_block

    ')'  shift, and go to state 265
    ','  shift, and go to state 266


State 191

   34 return_statement: "'return'" non_assignment_expression ';' .

    $default  reduce using rule 34 (return_statement)


State 192

  164 template_expression: "$(" statements_with_return ')' .

    $default  reduce using rule 164 (template_expression)


State 193

  163 template_expression: "$(" expression ')' .

    $default  reduce using rule 163 (template_expression)


State 194

   11 statement_block: '{' . statements '}'

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'++'"            shift, and go to state 11
    "'--'"            shift, and go to state 13
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    statements            go to state 267
    lambda_block          go to state 29
    lambda                go to state 30
    statement             go to state 268
    non_return_statement  go to state 269
    if_statement_start    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34
    while_statement       go to state 35
    return_statement      go to state 270
    break_statement       go to state 37
    continue_statement    go to state 38
    assignment_target     go to state 39
    assignment            go to state 40
    basic_expression      go to state 41
    impure_expression     go to state 42
    postfix_expression    go to state 126
    slice                 go to state 44
    subscript             go to state 45
    postcrement           go to state 46
    function_call         go to state 47
    property_call         go to state 48
    method_call           go to state 49
    dollar_call           go to state 50
    precrement            go to state 127
    literal               go to state 64
    scalar_literal        go to state 65
    list_literal          go to state 66
    dic_literal           go to state 67
    variable              go to state 68


State 195

   28 if_statement_start: if_statement_start "'else'" "'if'" . '(' expression ')' statement_block

    '('  shift, and go to state 271


State 196

   30 if_statement: if_statement_start "'else'" statement_block .

    $default  reduce using rule 30 (if_statement)


State 197

   48 assignment: assignment_target '=' assignment_source .

    $default  reduce using rule 48 (assignment)


State 198

   46 assignment_source: assignment .

    $default  reduce using rule 46 (assignment_source)


State 199

   47 assignment_source: non_assignment_expression .

    $default  reduce using rule 47 (assignment_source)


State 200

   49 assignment: assignment_target "'+='" assignment_source .

    $default  reduce using rule 49 (assignment)


State 201

   50 assignment: assignment_target "'-='" assignment_source .

    $default  reduce using rule 50 (assignment)


State 202

   51 assignment: assignment_target "'*='" assignment_source .

    $default  reduce using rule 51 (assignment)


State 203

   52 assignment: assignment_target "'/='" assignment_source .

    $default  reduce using rule 52 (assignment)


State 204

   53 assignment: assignment_target "'%='" assignment_source .

    $default  reduce using rule 53 (assignment)


State 205

   75 function_call: basic_expression '(' optional_arglist . ')'

    ')'  shift, and go to state 272


State 206

   45 assignment_target: postfix_expression '[' expression . ']'
   71 slice: postfix_expression '[' expression . ':' expression ']'
   72 subscript: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 273
    ':'  shift, and go to state 274


State 207

   77 property_call: postfix_expression '.' "name" .
  159 variable: "name" .

    '('       reduce using rule 159 (variable)
    $default  reduce using rule 77 (property_call)


State 208

   79 method_call: postfix_expression '.' basic_expression . '(' optional_arglist ')'

    '('  shift, and go to state 275


State 209

  111 comparable: unary_expression "'=~'" "regex literal" .

    $default  reduce using rule 111 (comparable)


State 210

  112 comparable: unary_expression "'!~'" "regex literal" .

    $default  reduce using rule 112 (comparable)


State 211

  109 comparable: unary_expression "'has'" unary_expression .
  144 junction: unary_expression . '|' unary_expression

    '|'  shift, and go to state 276

    $default  reduce using rule 109 (comparable)


State 212

  110 comparable: unary_expression "'has'" junction .
  145 junction: junction . '|' unary_expression

    '|'  shift, and go to state 277

    $default  reduce using rule 110 (comparable)


State 213

  102 multiplication_priority: multiplication_priority '*' unary_expression .

    $default  reduce using rule 102 (multiplication_priority)


State 214

  103 multiplication_priority: multiplication_priority '/' unary_expression .

    $default  reduce using rule 103 (multiplication_priority)


State 215

  104 multiplication_priority: multiplication_priority '%' unary_expression .

    $default  reduce using rule 104 (multiplication_priority)


State 216

  101 multiplication_priority: unary_expression .

    $default  reduce using rule 101 (multiplication_priority)


State 217

  102 multiplication_priority: multiplication_priority . '*' unary_expression
  103                        | multiplication_priority . '/' unary_expression
  104                        | multiplication_priority . '%' unary_expression
  106 addition_priority: addition_priority '+' multiplication_priority .

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146
    '%'  shift, and go to state 147

    $default  reduce using rule 106 (addition_priority)


State 218

  102 multiplication_priority: multiplication_priority . '*' unary_expression
  103                        | multiplication_priority . '/' unary_expression
  104                        | multiplication_priority . '%' unary_expression
  107 addition_priority: addition_priority '-' multiplication_priority .

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146
    '%'  shift, and go to state 147

    $default  reduce using rule 107 (addition_priority)


State 219

  113 comparable: addition_priority "'as'" "'bool'" .

    $default  reduce using rule 113 (comparable)


State 220

  114 comparable: addition_priority "'as'" "'int'" .

    $default  reduce using rule 114 (comparable)


State 221

  115 comparable: addition_priority "'as'" "'uint'" .

    $default  reduce using rule 115 (comparable)


State 222

  116 comparable: addition_priority "'as'" "'intlist'" .

    $default  reduce using rule 116 (comparable)


State 223

  117 comparable: addition_priority "'as'" "'real'" .

    $default  reduce using rule 117 (comparable)


State 224

  118 comparable: addition_priority "'as'" "'string'" .

    $default  reduce using rule 118 (comparable)


State 225

  119 comparable: addition_priority "'as'" "'obj'" .

    $default  reduce using rule 119 (comparable)


State 226

  120 comparable: addition_priority "'as'" "'objlist'" .

    $default  reduce using rule 120 (comparable)


State 227

  121 comparable: addition_priority "'as'" "'datetime'" .

    $default  reduce using rule 121 (comparable)


State 228

  122 comparable: addition_priority "'as'" "'date'" .

    $default  reduce using rule 122 (comparable)


State 229

  123 comparable: addition_priority "'as'" "'time'" .

    $default  reduce using rule 123 (comparable)


State 230

  125 format_call: addition_priority "'as'" basic_expression . '(' optional_arglist ')'

    '('  shift, and go to state 278


State 231

  127 conjunction_priority: conjunction_priority "'&&'" equality_priority .
  139 equality_priority: equality_priority . "'=='" comparison_priority
  140                  | equality_priority . "'=='" junction
  141                  | equality_priority . "'!='" comparison_priority
  142                  | equality_priority . "'!='" junction

    "'=='"  shift, and go to state 159
    "'!='"  shift, and go to state 160

    $default  reduce using rule 127 (conjunction_priority)


State 232

  129 disjunction_priority: disjunction_priority . "'||'" conjunction_priority
  131 ternary_priority: disjunction_priority '?' disjunction_priority . ':' ternary_priority

    ':'     shift, and go to state 279
    "'||'"  shift, and go to state 153


State 233

  127 conjunction_priority: conjunction_priority . "'&&'" equality_priority
  129 disjunction_priority: disjunction_priority "'||'" conjunction_priority .

    "'&&'"  shift, and go to state 151

    $default  reduce using rule 129 (disjunction_priority)


State 234

  134 comparison_priority: comparison_priority '>' comparable .

    $default  reduce using rule 134 (comparison_priority)


State 235

  133 comparison_priority: comparison_priority '<' comparable .

    $default  reduce using rule 133 (comparison_priority)


State 236

  136 comparison_priority: comparison_priority "'>='" comparable .

    $default  reduce using rule 136 (comparison_priority)


State 237

  135 comparison_priority: comparison_priority "'<='" comparable .

    $default  reduce using rule 135 (comparison_priority)


State 238

  137 comparison_priority: comparison_priority "'<=>'" comparable .

    $default  reduce using rule 137 (comparison_priority)


State 239

  101 multiplication_priority: unary_expression .
  109 comparable: unary_expression . "'has'" unary_expression
  110           | unary_expression . "'has'" junction
  111           | unary_expression . "'=~'" "regex literal"
  112           | unary_expression . "'!~'" "regex literal"
  144 junction: unary_expression . '|' unary_expression

    '|'      shift, and go to state 276
    "'=~'"   shift, and go to state 142
    "'!~'"   shift, and go to state 143
    "'has'"  shift, and go to state 144

    $default  reduce using rule 101 (multiplication_priority)


State 240

  133 comparison_priority: comparison_priority . '<' comparable
  134                    | comparison_priority . '>' comparable
  135                    | comparison_priority . "'<='" comparable
  136                    | comparison_priority . "'>='" comparable
  137                    | comparison_priority . "'<=>'" comparable
  139 equality_priority: equality_priority "'=='" comparison_priority .

    '>'      shift, and go to state 154
    '<'      shift, and go to state 155
    "'>='"   shift, and go to state 156
    "'<='"   shift, and go to state 157
    "'<=>'"  shift, and go to state 158

    $default  reduce using rule 139 (equality_priority)


State 241

  140 equality_priority: equality_priority "'=='" junction .
  145 junction: junction . '|' unary_expression

    '|'  shift, and go to state 277

    $default  reduce using rule 140 (equality_priority)


State 242

  133 comparison_priority: comparison_priority . '<' comparable
  134                    | comparison_priority . '>' comparable
  135                    | comparison_priority . "'<='" comparable
  136                    | comparison_priority . "'>='" comparable
  137                    | comparison_priority . "'<=>'" comparable
  141 equality_priority: equality_priority "'!='" comparison_priority .

    '>'      shift, and go to state 154
    '<'      shift, and go to state 155
    "'>='"   shift, and go to state 156
    "'<='"   shift, and go to state 157
    "'<=>'"  shift, and go to state 158

    $default  reduce using rule 141 (equality_priority)


State 243

  142 equality_priority: equality_priority "'!='" junction .
  145 junction: junction . '|' unary_expression

    '|'  shift, and go to state 277

    $default  reduce using rule 142 (equality_priority)


State 244

   90 cast: '(' "'bool'" ')' basic_expression .

    $default  reduce using rule 90 (cast)


State 245

   91 cast: '(' "'int'" ')' basic_expression .

    $default  reduce using rule 91 (cast)


State 246

   92 cast: '(' "'uint'" ')' basic_expression .

    $default  reduce using rule 92 (cast)


State 247

   93 cast: '(' "'intlist'" ')' basic_expression .

    $default  reduce using rule 93 (cast)


State 248

   94 cast: '(' "'real'" ')' basic_expression .

    $default  reduce using rule 94 (cast)


State 249

   95 cast: '(' "'string'" ')' basic_expression .

    $default  reduce using rule 95 (cast)


State 250

   96 cast: '(' "'obj'" ')' basic_expression .

    $default  reduce using rule 96 (cast)


State 251

   97 cast: '(' "'objlist'" ')' basic_expression .

    $default  reduce using rule 97 (cast)


State 252

   98 cast: '(' "'datetime'" ')' basic_expression .

    $default  reduce using rule 98 (cast)


State 253

   99 cast: '(' "'date'" ')' basic_expression .

    $default  reduce using rule 99 (cast)


State 254

  100 cast: '(' "'time'" ')' basic_expression .

    $default  reduce using rule 100 (cast)


State 255

   38 arglist: arglist ',' expression .

    $default  reduce using rule 38 (arglist)


State 256

  156 kv_pairs: kv_key ':' expression .

    $default  reduce using rule 156 (kv_pairs)


State 257

  155 kv_key: "string literal" .

    $default  reduce using rule 155 (kv_key)


State 258

  154 kv_key: "name" .

    $default  reduce using rule 154 (kv_key)


State 259

  157 kv_pairs: kv_pairs ',' kv_key . ':' expression

    ':'  shift, and go to state 280


State 260

   78 method_call: '.' basic_expression '(' optional_arglist . ')'

    ')'  shift, and go to state 281


State 261

   71 slice: postfix_expression '[' expression . ':' expression ']'
   72 subscript: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 282
    ':'  shift, and go to state 274


State 262

   27 if_statement_start: "'if'" '(' expression ')' . statement_block

    '{'  shift, and go to state 194

    statement_block  go to state 283


State 263

   31 for_statement: "'for'" '(' optional_arglist ';' . optional_arglist ';' optional_arglist ')' statement_block

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 284
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 264

   32 while_statement: "'while'" '(' expression ')' . statement_block

    '{'  shift, and go to state 194

    statement_block  go to state 285


State 265

   18 lambda: "'function'" '(' namelist ')' . lambda_block

    '{'  shift, and go to state 286

    lambda_block  go to state 287


State 266

   16 namelist: namelist ',' . "name"

    "name"  shift, and go to state 288


State 267

    6 statements: statements . statement
   11 statement_block: '{' statements . '}'

    '('               shift, and go to state 100
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '}'               shift, and go to state 289
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    "'++'"            shift, and go to state 11
    "'--'"            shift, and go to state 13
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block          go to state 29
    lambda                go to state 30
    statement             go to state 290
    non_return_statement  go to state 269
    if_statement_start    go to state 32
    if_statement          go to state 33
    for_statement         go to state 34
    while_statement       go to state 35
    return_statement      go to state 270
    break_statement       go to state 37
    continue_statement    go to state 38
    assignment_target     go to state 39
    assignment            go to state 40
    basic_expression      go to state 41
    impure_expression     go to state 42
    postfix_expression    go to state 126
    slice                 go to state 44
    subscript             go to state 45
    postcrement           go to state 46
    function_call         go to state 47
    property_call         go to state 48
    method_call           go to state 49
    dollar_call           go to state 50
    precrement            go to state 127
    literal               go to state 64
    scalar_literal        go to state 65
    list_literal          go to state 66
    dic_literal           go to state 67
    variable              go to state 68


State 268

    5 statements: statement .

    $default  reduce using rule 5 (statements)


State 269

   19 statement: non_return_statement .

    $default  reduce using rule 19 (statement)


State 270

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 271

   28 if_statement_start: if_statement_start "'else'" "'if'" '(' . expression ')' statement_block

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 291
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 272

   75 function_call: basic_expression '(' optional_arglist ')' .

    $default  reduce using rule 75 (function_call)


State 273

   45 assignment_target: postfix_expression '[' expression ']' .
   72 subscript: postfix_expression '[' expression ']' .

    '='       reduce using rule 45 (assignment_target)
    "'+='"    reduce using rule 45 (assignment_target)
    "'-='"    reduce using rule 45 (assignment_target)
    "'*='"    reduce using rule 45 (assignment_target)
    "'/='"    reduce using rule 45 (assignment_target)
    "'%='"    reduce using rule 45 (assignment_target)
    $default  reduce using rule 72 (subscript)


State 274

   71 slice: postfix_expression '[' expression ':' . expression ']'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 292
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 275

   79 method_call: postfix_expression '.' basic_expression '(' . optional_arglist ')'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 293
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 276

  144 junction: unary_expression '|' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 294
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 277

  145 junction: junction '|' . unary_expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block        go to state 29
    lambda              go to state 30
    basic_expression    go to state 41
    postfix_expression  go to state 104
    slice               go to state 44
    subscript           go to state 45
    postcrement         go to state 84
    function_call       go to state 85
    property_call       go to state 105
    method_call         go to state 86
    dollar_call         go to state 50
    unary_expression    go to state 295
    precrement          go to state 87
    cast                go to state 53
    literal             go to state 64
    scalar_literal      go to state 65
    list_literal        go to state 66
    dic_literal         go to state 67
    variable            go to state 103


State 278

  125 format_call: addition_priority "'as'" basic_expression '(' . optional_arglist ')'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 296
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 279

  131 ternary_priority: disjunction_priority '?' disjunction_priority ':' . ternary_priority

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block             go to state 29
    lambda                   go to state 30
    basic_expression         go to state 41
    postfix_expression       go to state 104
    slice                    go to state 44
    subscript                go to state 45
    postcrement              go to state 84
    function_call            go to state 85
    property_call            go to state 105
    method_call              go to state 86
    dollar_call              go to state 50
    unary_expression         go to state 51
    precrement               go to state 87
    cast                     go to state 53
    multiplication_priority  go to state 54
    addition_priority        go to state 55
    comparable               go to state 56
    format_call              go to state 57
    conjunction_priority     go to state 58
    disjunction_priority     go to state 59
    ternary_priority         go to state 297
    comparison_priority      go to state 61
    equality_priority        go to state 62
    literal                  go to state 64
    scalar_literal           go to state 65
    list_literal             go to state 66
    dic_literal              go to state 67
    variable                 go to state 103


State 280

  157 kv_pairs: kv_pairs ',' kv_key ':' . expression

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    lambda_block               go to state 29
    lambda                     go to state 30
    expression                 go to state 298
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 281

   78 method_call: '.' basic_expression '(' optional_arglist ')' .

    $default  reduce using rule 78 (method_call)


State 282

   72 subscript: postfix_expression '[' expression ']' .

    $default  reduce using rule 72 (subscript)


State 283

   27 if_statement_start: "'if'" '(' expression ')' statement_block .

    $default  reduce using rule 27 (if_statement_start)


State 284

   31 for_statement: "'for'" '(' optional_arglist ';' optional_arglist . ';' optional_arglist ')' statement_block

    ';'  shift, and go to state 299


State 285

   32 while_statement: "'while'" '(' expression ')' statement_block .

    $default  reduce using rule 32 (while_statement)


State 286

   12 lambda_block: '{' . expression '}'
   13             | '{' . statements_with_return '}'
   14             | '{' . non_return_statements '}'

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'if'"            shift, and go to state 15
    "'for'"           shift, and go to state 16
    "'while'"         shift, and go to state 17
    "'break'"         shift, and go to state 18
    "'continue'"      shift, and go to state 19
    "'function'"      shift, and go to state 20
    "'return'"        shift, and go to state 21
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    non_return_statements      go to state 94
    statements_with_return     go to state 95
    lambda_block               go to state 29
    lambda                     go to state 30
    non_return_statement       go to state 31
    if_statement_start         go to state 32
    if_statement               go to state 33
    for_statement              go to state 34
    while_statement            go to state 35
    return_statement           go to state 36
    break_statement            go to state 37
    continue_statement         go to state 38
    expression                 go to state 96
    assignment_target          go to state 39
    assignment                 go to state 97
    basic_expression           go to state 41
    impure_expression          go to state 42
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 46
    function_call              go to state 47
    property_call              go to state 48
    method_call                go to state 49
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 52
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 287

   18 lambda: "'function'" '(' namelist ')' lambda_block .

    $default  reduce using rule 18 (lambda)


State 288

   16 namelist: namelist ',' "name" .

    $default  reduce using rule 16 (namelist)


State 289

   11 statement_block: '{' statements '}' .

    $default  reduce using rule 11 (statement_block)


State 290

    6 statements: statements statement .

    $default  reduce using rule 6 (statements)


State 291

   28 if_statement_start: if_statement_start "'else'" "'if'" '(' expression . ')' statement_block

    ')'  shift, and go to state 300


State 292

   71 slice: postfix_expression '[' expression ':' expression . ']'

    ']'  shift, and go to state 301


State 293

   79 method_call: postfix_expression '.' basic_expression '(' optional_arglist . ')'

    ')'  shift, and go to state 302


State 294

  144 junction: unary_expression '|' unary_expression .

    $default  reduce using rule 144 (junction)


State 295

  145 junction: junction '|' unary_expression .

    $default  reduce using rule 145 (junction)


State 296

  125 format_call: addition_priority "'as'" basic_expression '(' optional_arglist . ')'

    ')'  shift, and go to state 303


State 297

  131 ternary_priority: disjunction_priority '?' disjunction_priority ':' ternary_priority .

    $default  reduce using rule 131 (ternary_priority)


State 298

  157 kv_pairs: kv_pairs ',' kv_key ':' expression .

    $default  reduce using rule 157 (kv_pairs)


State 299

   31 for_statement: "'for'" '(' optional_arglist ';' optional_arglist ';' . optional_arglist ')' statement_block

    '('               shift, and go to state 1
    '['               shift, and go to state 2
    '{'               shift, and go to state 3
    '.'               shift, and go to state 4
    "int literal"     shift, and go to state 5
    "real literal"    shift, and go to state 6
    "string literal"  shift, and go to state 8
    "null literal"    shift, and go to state 9
    '+'               shift, and go to state 10
    "'++'"            shift, and go to state 11
    '-'               shift, and go to state 12
    "'--'"            shift, and go to state 13
    '!'               shift, and go to state 14
    "'function'"      shift, and go to state 20
    "name"            shift, and go to state 22
    "$NUM"            shift, and go to state 24
    "$NAME"           shift, and go to state 25

    $default  reduce using rule 39 (optional_arglist)

    lambda_block               go to state 29
    lambda                     go to state 30
    arglist                    go to state 89
    optional_arglist           go to state 304
    expression                 go to state 91
    assignment_target          go to state 39
    assignment                 go to state 83
    basic_expression           go to state 41
    postfix_expression         go to state 43
    slice                      go to state 44
    subscript                  go to state 45
    postcrement                go to state 84
    function_call              go to state 85
    property_call              go to state 48
    method_call                go to state 86
    dollar_call                go to state 50
    unary_expression           go to state 51
    precrement                 go to state 87
    cast                       go to state 53
    multiplication_priority    go to state 54
    addition_priority          go to state 55
    comparable                 go to state 56
    format_call                go to state 57
    conjunction_priority       go to state 58
    disjunction_priority       go to state 59
    ternary_priority           go to state 60
    comparison_priority        go to state 61
    equality_priority          go to state 62
    non_assignment_expression  go to state 88
    literal                    go to state 64
    scalar_literal             go to state 65
    list_literal               go to state 66
    dic_literal                go to state 67
    variable                   go to state 68


State 300

   28 if_statement_start: if_statement_start "'else'" "'if'" '(' expression ')' . statement_block

    '{'  shift, and go to state 194

    statement_block  go to state 305


State 301

   71 slice: postfix_expression '[' expression ':' expression ']' .

    $default  reduce using rule 71 (slice)


State 302

   79 method_call: postfix_expression '.' basic_expression '(' optional_arglist ')' .

    $default  reduce using rule 79 (method_call)


State 303

  125 format_call: addition_priority "'as'" basic_expression '(' optional_arglist ')' .

    $default  reduce using rule 125 (format_call)


State 304

   31 for_statement: "'for'" '(' optional_arglist ';' optional_arglist ';' optional_arglist . ')' statement_block

    ')'  shift, and go to state 306


State 305

   28 if_statement_start: if_statement_start "'else'" "'if'" '(' expression ')' statement_block .

    $default  reduce using rule 28 (if_statement_start)


State 306

   31 for_statement: "'for'" '(' optional_arglist ';' optional_arglist ';' optional_arglist ')' . statement_block

    '{'  shift, and go to state 194

    statement_block  go to state 307


State 307

   31 for_statement: "'for'" '(' optional_arglist ';' optional_arglist ';' optional_arglist ')' statement_block .

    $default  reduce using rule 31 (for_statement)
